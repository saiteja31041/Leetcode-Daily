class Solution {
    public int findTargetSumWays(int[] nums, int target) {
        int sum = 0;
        for (int num : nums) sum += num;
        
        // If (sum + target) is odd or negative, no solution
        if ((sum + target) % 2 != 0 || sum < Math.abs(target)) return 0;
        
        int newTarget = (sum + target) / 2;
        return subsetSum(nums, newTarget);
    }

    private int subsetSum(int[] nums, int target) {
        int[] dp = new int[target + 1];
        dp[0] = 1;
        for (int num : nums) {
            for (int j = target; j >= num; j--) {
                dp[j] += dp[j - num];
            }
        }
        return dp[target];
    }
}
